"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

DEPLOYMENT = "Deploy Success to Code Deploy + GithubAction"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'lfd(9=!^wxnt!#2c2#(a(34cf2&1n)ys8r(9-c&x$^(xl-rb*!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'KGflex.apps.KgflexConfig',
    'cacheops',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

DataBase_Write_Endpoint = "mydb-instance-1.c7tpfyaiw1nc.ap-northeast-2.rds.amazonaws.com"
DataBase_Read_Endpoint = "mydb-instance-1-ap-northeast-2a.c7tpfyaiw1nc.ap-northeast-2.rds.amazonaws.com"

## Get User, Password from Secret Manager
Secret = False
if Secret:
    import boto3.session
    import json
    from aws_secretsmanager_caching import SecretCache, SecretCacheConfig 

    def get_secret():

        secret_name = "Dev/kgcha/mysql_aurora"
        region_name = "ap-northeast-2"

        # Create a Secrets Manager client
        session = boto3.session.Session()
        client = session.client(
            service_name='secretsmanager',
            region_name=region_name
        )
        cache_config = SecretCacheConfig()
        cache = SecretCache( config = cache_config, client = client)
        secret_str = cache.get_secret_string(secret_name)
        secret_data = json.loads(secret_str)
        return secret_data
    
DataBase_User = "admin"
DataBase_User_Password = "admin123"
    
# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': "django_db",
            'USER': DataBase_User,
            'PASSWORD': DataBase_User_Password,
            'HOST': DataBase_Write_Endpoint,
            'PORT': '3306',
            "OPTIONS": {"charset": "utf8mb4"}
        },
        'readonly': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': "django_db",
            'USER': DataBase_User,
            'PASSWORD': DataBase_User_Password,
            'HOST': DataBase_Read_Endpoint,
            'PORT': '3306',
            "OPTIONS": {"charset": "utf8mb4"}
        }
    }


REDIS_HOST = "redis-001-001-001.vo2lks.0001.apn2.cache.amazonaws.com"

USE_CACHE = False
if USE_CACHE:
    CACHEOPS_LRU = True
    CACHEOPS_DEGRADE_ON_FAILURE = True
    CACHEOPS_DEFAULTS = {
        'timeout': 60*5,
        'cache_on_save': True,
        'ops' : 'all'
    }
    CACHEOPS_REDIS = {
        'host' : REDIS_HOST,
        'port' : 6379,
        'db' : 1,
        'socket_timeout': 1
    }
    CACHEOPS = {
        'KGflex.*' : {},
    }
    
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

import os
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
